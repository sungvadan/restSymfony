diff --git a/src/AppBundle/Controller/Api/ProgrammerController.php b/src/AppBundle/Controller/Api/ProgrammerController.php
index 6a88d39..579eed9 100644
--- a/src/AppBundle/Controller/Api/ProgrammerController.php
+++ b/src/AppBundle/Controller/Api/ProgrammerController.php
@@ -199,12 +199,7 @@ class ProgrammerController extends BaseController
 
     private function processForm(Request $request, FormInterface $form)
     {
-        $data = json_decode($request->getContent(), true);
-        if ($data === null) {
-            $apiProblem = new ApiProblem(400, ApiProblem::TYPE_INVALID_REQUEST_BODY_FORMAT);
-
-            throw new ApiProblemException($apiProblem);
-        }
+        $data = $this->decodeRequestBody($request);
 
         $clearMissing = $request->getMethod() != 'PATCH';
         $form->submit($data, $clearMissing);
diff --git a/src/AppBundle/Controller/BaseController.php b/src/AppBundle/Controller/BaseController.php
index 520d1d2..42af7c9 100644
--- a/src/AppBundle/Controller/BaseController.php
+++ b/src/AppBundle/Controller/BaseController.php
@@ -2,6 +2,8 @@
 
 namespace AppBundle\Controller;
 
+use AppBundle\Api\ApiProblem;
+use AppBundle\Api\ApiProblemException;
 use AppBundle\Repository\ProgrammerRepository;
 use AppBundle\Repository\UserRepository;
 use AppBundle\Repository\ProjectRepository;
@@ -136,4 +138,21 @@ abstract class BaseController extends Controller
         return $this->container->get('jms_serializer')
             ->serialize($data, $format, $context);
     }
+
+    protected function decodeRequestBody(Request $request)
+    {
+        // allow for a possibly empty body
+        if (!$request->getContent()) {
+            return array();
+        }
+
+        $data = json_decode($request->getContent(), true);
+        if ($data === null) {
+            $apiProblem = new ApiProblem(400, ApiProblem::TYPE_INVALID_REQUEST_BODY_FORMAT);
+
+            throw new ApiProblemException($apiProblem);
+        }
+
+        return $data;
+    }
 }
